// ----------------------------------------------------Модуль 3. Функции.

// --------------------------------------------------------------task-1-1.-------------------------------------------------
// Напишите функцию getSum, которая будет находить сумму квадратов элементов массива.

// function getSum(arr) {
//   // ваш код
// }

// // Примеры использования
// getSum([1, 3]) // => 10
// getSum([2, 5]) // => 29
// getSum([2, 3, 2]) // => 17

// function getSum(arr) {
//     let summ = 0
//     for (let i = 0; i < arr.length; i++) {
//         arr[i] = arr[i] * arr[i]
//         summ += arr[i]
//     }
//     return summ
// }

// console.log(getSum([1, 3]))
// console.log(getSum([2, 5]))
// console.log(getSum([2, 3, 2]))



// ------------------------------------------------------------------------task-1-2.----------------------------------------------
// Создайте файл task-1-2.js

// Сделайте функцию getDigitsSum, которая параметром будет принимать целое число и возвращать сумму его цифр.

// function getDigitsSum(num) {
//     // ваш код
// }

// // Примеры использования
// getDigitsSum(251) // => 8
// getDigitsSum(100) // => 1
// getDigitsSum(16) // => 7

// function getDigitsSum(num) {
//     let a = num.toString()
//     let summ = 0
//     for (let i = 0; i < a.length; i++) {
//         summ += Number(a[i])
//     }
//     return (summ)
// }

// console.log(getDigitsSum(251));
// console.log(getDigitsSum(100));
// console.log(getDigitsSum(16));



// ------------------------------------------------------------------------------ task-1-3.----------------------------------------------
// Реализуйте функцию getDivisors, которая параметром будет принимать число и возвращать массив его делителей, то есть чисел, на которое делится наше число. К примеру, если мы передадим число 24 - мы должны получить следующий массив:

// [1, 2, 3, 4, 6, 8, 12, 24]
// function getDivisors(num) {
//   // ваш код
// }

// // Примеры использования
// getDivisors(4) // => [1, 2, 4]
// getDivisors(9) // => [1, 3, 9]
// getDivisors(11) // => [1, 11]

// function getDivisors(num) {
//     let a = num
//     let arr = []
//     arr.unshift(a)
//     for (i = 0; i < num; i++) {
//         a--
//         if (num % a == 0) {
//             arr.unshift(a)
//         }
//     }
//     return arr
// }
// console.log(getDivisors(24))



// -------------------------------------------------------------task-1-4.----------------------------------------------------
// Сделайте функцию reverseStr, которая параметром будет принимать строку и переворачивать ее символы в обратном порядке.
// function reverseStr(str) {
//   // ваш код
// }

// // Примеры использования
// reverseStr("привет") // => "тевирп"
// reverseStr("мир") // => "рим"
// reverseStr("моё имя ваня") // => "янав ями ёом"

// function reverseStr(str) {
//     arr = []
//     for (let i = 0; i < str.length; i++) {
//         arr.unshift(str[i])
//     }
//     let string = arr.toString()
//     string = string.replace(/[\.,%]/g, '');
//     return string
// }
// console.log(reverseStr("моё имя ваня"))



// ------------------------------------------------------------------task-1-5.--------------------------------------------------------
// Сделайте функцию delElem, которая параметрами будет принимать значение и массив и удалять из массива все элементы с таким значением, а затем возвращать новый массив:

// function delElem(value, arr) {
//   // ваш код
// }

// // Примеры использования
// delElem("да", ["да", "нет", "да", "нет"]) // => ["нет", "нет"]
// delElem(0, [1, 3, 0, 1, 0, 5]) // => [1, 3, 1, 5]

// function delElem(value, arr) {
//     let arr1
//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] === value) {
//             arr1 = arr.indexOf(arr[i])
//         }
//         arr.splice(0, arr1)
//     }
//     return arr
// }

// console.log(delElem("да", ["да", "нет", "да", "нет"]))
// console.log(delElem(0, [1, 3, 0, 1, 0, 5]))



// ----------------------------------------------------------------task-1-6.--------------------------------------------------
// Сделайте функцию fillArray, которая принимает на вход целое число заполняющую массив целыми числами от 1 до заданного.

// function fillArray(num) {
//   // ваш код
// }

// // Примеры использования
// fillArray(4) // => [1, 2, 3, 4]
// fillArray(2) // => [1, 2]
// fillArray(7) // => [1, 2, 3, 4, 5, 6, 7]

// function fillArray(num) {
//     let a = num
//     let arr = []
//     arr.unshift(a)
//     for (i = 1; i < num; i++) {
//         a--
//         arr.unshift(a)
//     }
//     return arr
// }

// console.log(fillArray(4))
// console.log(fillArray(2))
// console.log(fillArray(7))



// Задание 1. Сравнение массивов
// -------------------------------------------------task-2-1.-------------------------------------------
// Напишите функцию compareArrays, которая принимает на вход два двумерных массива и возвращает true, если элементы в этих двух массивах одинаковые, иначе возвращает false

// funсtion compareArrays(arr1, arr2) {
//   // ваш код
// }

// // Примеры использования
// compareArrays([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]) // => true
// compareArrays([[1, 2], [4]], [[1], [4, 5]]) // => false

// function compareArrays(arr1, arr2) {
//     for (let i = 0; i < arr1.length; i++) {
//         for (let j = 0; j < arr1[i].length; j++) {
//             for (let i = 0; i < arr2.length; i++) {
//                 for (let j = 0; j < arr2[i].length; j++) {
//                     if (arr1[i].length == arr2[i].length) {
//                         if (arr1[i][j] === arr2[i][j]) {
//                             return true
//                         } else { return false }
//                     } else { return false }
//                 }
//             }
//         }
//     }
// }

// console.log(compareArrays([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]))
// console.log(compareArrays([[1, 2], [4]], [[1], [4, 5]]))



// -------------------------------------------------------------task-2-2.------------------------------------------

// Напишите программу, которая будет вызывать prompt и запрашивать у пользователя время в формате ЧЧ:ММ:СС и ставить таймер. Когда таймер истечет, необходимо вывести alert, что таймер истек и запросить новый таймер.

// function attention() {
//     alert('Время вышло!')
// }

// let time1 = prompt('введите время для таймера, кол-во часов')
// let time2 = prompt('введите время для таймера, кол-во минут')
// let time3 = prompt('введите время для таймера, кол-во секунд')
// let summ = 0
// let t1 = 0
// let t2 = 0
// let t3 = 0

// t1 = time1 * 3600000
// t2 = time2 * 60000
// t3 = time3 * 1000
// summ = t1 + t2 + t3

// setTimeout(attention, summ)